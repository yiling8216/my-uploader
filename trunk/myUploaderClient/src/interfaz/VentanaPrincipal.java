/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VentanaPrincipal.java
 *
 * Created on 25/06/2011, 03:07:06 PM
 */

package interfaz;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import mundo.Conexion;
import mundo.Usuario;

/**
 *
 * @author DMHA
 */
public class VentanaPrincipal extends javax.swing.JDialog {


    boolean sesion=false;

    /** Creates new form VentanaPrincipal */
    public VentanaPrincipal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        contenedor.setViewportView(new PanelLogin(this));
        miConexion=new Conexion();
        

        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedor = new javax.swing.JScrollPane();
        menus = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rsc/bannerP.jpg"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rsc/FONDO.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menus, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, 0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                    .addComponent(menus, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaPrincipal dialog = new VentanaPrincipal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane contenedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane menus;
    // End of variables declaration//GEN-END:variables
    Conexion miConexion;
    Usuario miUsuario;

    public void agregarUsuario(String nombre, String apellido, String email, String usuario, String contrasena) {

         if(miConexion.agregarUsuario(nombre,apellido,email,usuario,contrasena).equals("1"))
         {
         JOptionPane.showMessageDialog(null, "El Usuario Fue Registrado.");
         login(usuario, contrasena);
         }
         else
         {
         JOptionPane.showMessageDialog(null, "El Usuario No Pudo Ser Registrado.");
         }

    }

    public void agregarArchivo(String ruta) throws Exception{

        miConexion.agregarArchivo(ruta,miUsuario.getnUsuario());
    }

    public void login(String nombreUsuario,String contrasena)
    {
        String cadena=miConexion.login(nombreUsuario,contrasena);
        
        if(!cadena.equals("noExiste")){
        
           System.out.print(cadena);
            interpretarCadena(cadena);
            contenedor.setViewportView(new PanelSubirArchivo(this));
            menus.setViewportView(new PanelMenu(this));
            //miConexion.descargarArchivos("lancha90");
            jLabel2.setText(miUsuario.getnUsuario()+"\n"+miUsuario.getNombre()+" "+miUsuario.getApellido());
        }
        else{
        JOptionPane.showMessageDialog(null, "Nombre De Usuario o Contrase√±a Incorrecta");
        }
    }

    public void cerrarSesion()
    {
    miUsuario=null;
    contenedor.setViewportView(new PanelLogin(this));
    menus.setViewportView(null);
    }

    public void mostarCargaArchivos()
    {
    contenedor.setViewportView(new PanelSubirArchivo(this));
    }

    public void interpretarCadena(String cadena)
    {
        miUsuario= new Usuario();
        String aux="";
        int contador=0;
        
        for (int i = 0; i < cadena.length(); i++) {

            if(cadena.charAt(i)=='>')
            {
            switch (contador){
                case 0:
                    miUsuario.setEmail(aux);
                    break;
                case 1:
                    miUsuario.setNombre(aux);
                    break;
                case 2:
                    miUsuario.setApellido(aux);
                    break;
                case 3:
                    miUsuario.setnUsuario(aux);
                    break;
                }

                aux="";
                contador++;

            }
            else
            {
            aux=aux+cadena.charAt(i);
            }
        }
    

    }

    public ArrayList<String> separarCadena(String cadena)
    {
    ArrayList<String> arreglo= new ArrayList<String>();
    String aux="";

        for (int i = 0; i < cadena.length(); i++) {

            if(cadena.charAt(i)=='>')
            {
                arreglo.add(aux);
                aux="";
            }
            else
            {
            aux=aux+cadena.charAt(i);
            }

        }



    return arreglo;
    }

    public void addUsuario() {
        contenedor.setViewportView(new PanelAgregarUsuario(this));
    }

    public void descargar(String miArchivo) {

        String cadena=miConexion.descargarArchivo(miArchivo,miUsuario.getnUsuario());

    }

    public void buscarArchivos() {


       String cadena= miConexion.buscarArchivos(miUsuario.getnUsuario());
       contenedor.setViewportView(new PanelTodosArchivo(separarCadena(cadena),this));


    }


    public boolean isSesion() {
        return sesion;
    }

    public void setSesion(boolean sesion) {
        this.sesion = sesion;
    }

    public JScrollPane getContenedor() {
        return contenedor;
    }

    public void setContenedor(JScrollPane contenedor) {
        this.contenedor = contenedor;
    }

    public Usuario getMiUsuario() {
        return miUsuario;
    }

    public void setMiUsuario(Usuario miUsuario) {
        this.miUsuario = miUsuario;
    }



    
    
}
